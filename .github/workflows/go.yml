name: Go

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        uses: actions/setup-go@v1
        with:
          go-version: ^1.14
          
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Lint
        uses: golangci/golangci-lint-action@v1
        with:
          version: v1.28
          working-directory: server
    
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
          
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: go/src/github.com/jak103/

      - name: Move server
        run: |
          pwd
          mv go/src/github.com/jak103/server go/src/github.com/jak103/usu-uno
      
      - name: Setup
        uses: actions/setup-go@v1
        with:
          go-version: ^1.14
        env:
          GOPATH: /home/runner/work/uno/uno
    
      - name: Debug
        run: |
          pwd
          echo ${GOPATH}
          echo ${GOROOT}

      - name: Test
        working-directory: server
        run: |
          go test -v -race -coverprofile=../coverage.out -covermode=atomic .
        env:
          GOPATH: /home/runner/work/uno/uno
      
      - uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: coverage.out
        env:
          GOPATH: /home/runner/work/uno/uno
          
        
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Setup
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      working-directory: server
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      working-directory: server
      run: go build -v .
